@import 'tailwindcss';

:root {
  --dialog-duration: 0.4s;
  --dialog-bg: rgba(0, 0, 0, 0.5);
}

@theme {
  --animate-cart-add: cartAdd 1s ease-out;
  --animate-cart-open: cartAdd 0.5s ease-out;
  --animate-pop: pop 0.3s ease-out;
  --animate-pop-slow: pop 0.6s ease-in;
  --animate-acc: acc 0.15s ease-in;
  --animate-suggestbox: suggestbox 0.3s ease-in-out;
  --animate-facets: facets 0.3s;
  --animate-focus: focus 0.8s ease;

  @keyframes cartAdd {
    0% {
      transform: scale(0.8);
      opacity: 0;
    }

    20% {
      transform: scale(1.1);
      opacity: 1;
    }

    100% {
      transform: scale(1);
      opacity: 1;
    }
  }

  @keyframes focus {
    0% {
      opacity: 0;
      transform: scale(0.6) rotate(0deg);
    }

    70% {
      opacity: 1;
      transform: scale(1) rotate(0deg);
    }

    80% {
      opacity: 1;
      transform: scale(1) rotate(4deg);
    }

    90% {
      opacity: 1;
      transform: scale(1) rotate(-4deg);
    }

    100% {
      opacity: 1;
      transform: scale(1) rotate(0deg);
    }
  }

  @keyframes facets {
    0% {
      opacity: 0;
      transform: translateX(-200px);
    }

    100% {
      opacity: 1;
      transform: translateX(0);
    }
  }

  @keyframes suggestbox {
    0% {
      opacity: 0;
      transform: scale(1, 0.8) translate(0, -10%);
    }

    100% {
      opacity: 1;
      transform: scale(1, 1) translate(0, 0);
    }
  }

  @keyframes pop {
    0% {
      opacity: 0;
      transform: scale(0.8, 0.8) translate(0, 20%);
    }

    100% {
      opacity: 1;
      transform: scale(1, 1) translate(0, 0);
    }
  }

  @keyframes acc {
    0% {
      opacity: 0;
      transform: translate(0, -40px);
    }

    100% {
      opacity: 1;
      transform: translate(0, 0);
    }
  }
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {

  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }

  @keyframes sticky-shadow {
    0% {
      box-shadow: 0 0px 0px rgba(0, 0, 0, 0);
    }

    10% {
      box-shadow: 8px 0px 20px rgba(0, 0, 0, 0.4);
    }

    100% {
      box-shadow: 8px 0px 20px rgba(0, 0, 0, 0.4);
    }

  }

  /* @view-transition {
    navigation: auto;
  } */

  ::view-transition-product-image(root) {
    isolation: auto;
    mix-blend-mode: multiply;
  }

  ::view-transition-product-name(root) {
    isolation: auto;
  }

  ::view-transition-old(root),
  ::view-transition-new(root) {
    mix-blend-mode: normal;
    animation-duration: 0.5s;
    display: block;
  }

  .product-image {
    width: fit-content;
    transition: all;
    view-transition-name: product-image;
  }

  .product-name {
    width: fit-content;
    transition: all;
    view-transition-name: product-name;
  }

  .scroll-sticky-top {
    position: sticky;
    top: 0;
    z-index: 10;
    background-color: rgba(255, 255, 255, 1);
  }

  @supports (animation-timeline: scroll(root)) {
    .scroll-sticky-top {
      animation: sticky-shadow ease-in forwards;
      animation-timeline: scroll(root);
      animation-duration: auto;
    }
  }

  .suggest-input {
    anchor-name: --suggestfield;
  }

  .suggest-result {
    position: absolute;
    position-anchor: --suggestfield;
    top: calc(anchor(bottom) + 1px);
    left: anchor(left);
    right: anchor(right);

  }

  .dropdown {
    transition: opacity 0.3s ease-in-out;
  }

  .dropdown[aria-hidden="false"] {
    display: block;
    opacity: 1;
  }

  .dropdown[aria-hidden="true"] {
    display: none;
    opacity: 0;
  }

  .dropdown-item {
    padding: 0.5rem 1rem;
    width: 100%;
    transition: all 0.2s ease-in-out;
  }

  .dropdown-item:focus,
  .dropdown-item:active {
    background-color: var(--color-gray-300);
    outline: none;
  }

  .suggest-result *:focus,
  .suggest-result *:active {
    background-color: var(--color-gray-300);
    outline: none;
  }

  .suggest-result[aria-hidden="true"] {
    display: none;
    opacity: 0;
  }

  .suggest-result[aria-hidden="false"] {
    display: block;
    opacity: 1;
  }


  @keyframes animate-in {
    0% {
      opacity: 0;
      transform: translateY(90px);
    }

    30% {
      opacity: 1;
      transform: translateY(0);
    }

    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes animate-out {
    0% {
      opacity: 1;
      transform: translateY(0);
    }

    70% {
      opacity: 1;
      transform: translateY(0);
    }

    100% {
      opacity: 0;
      transform: translateY(-40px);
    }
  }

  @media(prefers-reduced-motion: no-preference) {
    @supports (animation-timeline: view()) {
      .animating-element {
        animation: animate-in ease-in forwards;
        animation-timeline: view();
        animation-duration: auto;
        animation-range: entry;
      }

      .progress {
        opacity: 1;
      }
    }
  }

  .progress {
    height: 4px;
    background: linear-gradient(to right,
        var(--color-yellow-500) 0%,
        var(--color-green-500) 100%);
    position: fixed;
    bottom: 0;
    z-index: 20;
    left: 0;
    opacity: 0;
    width: 100%;
    transform-origin: 0 50%;
    animation: scaleProgress auto linear;
    animation-timeline: scroll(root);
  }

  @keyframes scaleProgress {
    0% {
      opacity: 0;
      transform: scaleX(0);
    }

    15% {
      opacity: 1;
    }

    100% {
      transform: scaleX(1);
    }
  }



  dialog::backdrop {
    transition: display var(--dialog-duration) allow-discrete, overlay var(--dialog-duration) allow-discrete;
    animation: backdrop-close var(--dialog-duration) forwards;
    margin: 0;
    padding: 0;
  }

  dialog:modal,
  dialog {
    margin: 0;
    padding: 0;
    overflow: hidden;
    border-radius: 0;
    background-color: transparent;
    border: none;
    box-shadow: none;
    max-height: 100%;
    position: fixed;
    min-width: 0px;
    max-width: calc(100vw - 2rem);
    max-height: 100vh;
    ;
  }

  dialog[open]::backdrop {
    background-color: var(--dialog-bg);
    animation: backdrop-open var(--dialog-duration) forwards;
  }

  dialog.dialog {
    left: 50%;
    top: 50%;
    max-height: calc(100vh - 2rem);
    transform: translate(-50%, -50%);
    transition: display var(--dialog-duration) allow-discrete, overlay var(--dialog-duration) allow-discrete;
    animation: close-dialog var(--dialog-duration) forwards;

    &[open] {
      animation: open-dialog var(--dialog-duration) forwards;
    }
  }

  dialog.left {
    left: 0px;
    right: auto;
    height: 100%;
    transition: display var(--dialog-duration) allow-discrete, overlay var(--dialog-duration) allow-discrete;
    animation: close-left var(--dialog-duration) forwards;

    &[open] {
      animation: open-left var(--dialog-duration) forwards;
    }
  }

  dialog.right {
    left: auto;
    right: 0px;
    height: 100%;
    transition: display var(--dialog-duration) allow-discrete, overlay var(--dialog-duration) allow-discrete;
    animation: close-right var(--dialog-duration) forwards;

    &[open] {
      animation: open-right var(--dialog-duration) forwards;
    }
  }

  @keyframes backdrop-open {
    from {
      opacity: 0;
    }

    to {
      opacity: 1;
    }
  }

  @keyframes backdrop-close {
    from {
      opacity: 1;
    }

    to {
      opacity: 0;
    }
  }

  @keyframes open-left {
    from {
      box-shadow: 0px 0px 0px rgba(0, 0, 0, 0.01);
      translate: -200px 0;
      opacity: 0;
    }

    to {
      box-shadow: 4px 0px 50px rgba(0, 0, 0, 0.3);
      translate: 0 0;
      opacity: 1;
    }
  }

  @keyframes open-dialog {
    from {
      box-shadow: 0px 0px 0px rgba(0, 0, 0, 0.01);
      translate: 0 100px;
      opacity: 0;
    }

    to {
      box-shadow: 4px 0px 50px rgba(0, 0, 0, 0.3);
      translate: 0 0;
      opacity: 1;
    }
  }

  @keyframes close-dialog {
    from {
      box-shadow: 4px 0px 50px rgba(0, 0, 0, 0.3);
      translate: 0 0;
      opacity: 1;
    }

    to {
      box-shadow: 0px 0px 0px rgba(0, 0, 0, 0.01);
      translate: 0 100px;
      opacity: 0;
    }


  }

  @keyframes close-left {
    from {
      box-shadow: 4px 0px 50px rgba(0, 0, 0, 0.3);
      translate: 0 0;
      opacity: 1;
    }

    to {
      translate: -200px 0;
      box-shadow: 0px 0px 0px rgba(0, 0, 0, 0.01);
      opacity: 0;
    }
  }

  @keyframes open-right {
    from {
      box-shadow: 0px 0px 0px rgba(0, 0, 0, 0.01);
      translate: 200px 0;
      opacity: 0;
    }

    to {
      box-shadow: 4px 0px 50px rgba(0, 0, 0, 0.3);
      translate: 0 0;
      opacity: 1;
    }
  }

  @keyframes close-right {
    from {
      box-shadow: 4px 0px 50px rgba(0, 0, 0, 0.3);
      translate: 0 0;
      opacity: 1;
    }

    to {
      translate: 200px 0;
      box-shadow: 0px 0px 0px rgba(0, 0, 0, 0.01);
      opacity: 0;
    }
  }
}

:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color: #242424;
  background-color: #fefefe;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
  -webkit-appearance: none;
  margin: 0;
}

input[type="number"] {
  -moz-appearance: textfield;
}

::scroll-button(*):disabled {
  opacity: 0;
}

.carousel {
  overflow-x: auto;
  scroll-snap-type: x mandatory;
  scroll-behavior: smooth;
  overscroll-behavior-x: contain;
  display: flex;
  flex-direction: row;
  position: relative;

  &::scroll-button(*) {

    position: absolute;
    top: calc(50% - 15px);
    font-weight: bold;

    transition: all 0.3s ease;

    transform: scale(1.3);
    margin: 0;
    padding: 0;
    border-radius: 10px;
    padding-top: 3px;
    background-color: rgba(255, 255, 255, 1);
    box-shadow: 0px 0px 4px rgba(0, 0, 0, 0.1);
    z-index: 10;

    border: 0;
    text-shadow: 1px 1px 8px white;
    color: var(--color-black);
    fill: var(--color-black);

    cursor: pointer;
  }

  &::scroll-button(left) {
    left: 0rem;
    content: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M15.41 7.41L10.83 12l4.58 4.59L14 18l-6-6 6-6z"/></svg>');
  }

  &::scroll-button(right) {
    content: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path d="M8.59 7.41L13.17 12l-4.58 4.59L10 18l6-6-6-6z"/></svg>');
    right: 0rem;
  }

}